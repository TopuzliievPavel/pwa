.container {
  margin: 0 map_get($grid-xs, 'grid-margins');

  @media (min-width: map_get($breakpoint, 'large')) {
    margin: 0 map_get($grid-mdl, 'grid-margins');
  }

  @media (min-width: 1366px) {
    max-width: 1166px;
    margin: 0 auto;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -(map_get($grid-xs, 'gutter-width') / 2);
  margin-left: -(map_get($grid-xs, 'gutter-width') / 2);

  @media (min-width: map_get($breakpoint, 'mdl')) {
    margin-right: -(map_get($grid-mdl, 'gutter-width') / 2);
    margin-left: -(map_get($grid-mdl, 'gutter-width') / 2);
  }
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    max-width: 100% /  $grid-columns * $i;
    width: 100% /  $grid-columns * $i;
    flex: 0 0 100% /  $grid-columns * $i;
    padding: 0 (map_get($grid-xs, 'gutter-width') / 2);

    @media (min-width: map_get($breakpoint, 'mdl')) {
      padding: 0 (map_get($grid-mdl, 'gutter-width') / 2);
    }
  }
}

@each $item, $breakpoint in $breakpoint {
  @media all and (min-width: $breakpoint) {
    @for $i from 1 through $grid-columns {
      .col-#{$item}-#{$i} {
        max-width: 100% / $grid-columns * $i;
        width: 100% / $grid-columns * $i;
        flex: 0 0 100% / $grid-columns * $i;
      }
    }
  }
}
